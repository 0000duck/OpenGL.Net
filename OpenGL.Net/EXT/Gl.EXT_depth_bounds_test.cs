
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] Value of GL_DEPTH_BOUNDS_TEST_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_depth_bounds_test")]
		public const int DEPTH_BOUNDS_TEST_EXT = 0x8890;

		/// <summary>
		/// [GL] Value of GL_DEPTH_BOUNDS_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_depth_bounds_test")]
		public const int DEPTH_BOUNDS_EXT = 0x8891;

		/// <summary>
		/// [GL] Binding for glDepthBoundsEXT.
		/// </summary>
		/// <param name="zmin">
		/// A <see cref="T:double"/>.
		/// </param>
		/// <param name="zmax">
		/// A <see cref="T:double"/>.
		/// </param>
		[RequiredByFeature("GL_EXT_depth_bounds_test")]
		public static void DepthBoundsEXT(double zmin, double zmax)
		{
			Debug.Assert(Delegates.pglDepthBoundsEXT != null, "pglDepthBoundsEXT not implemented");
			Delegates.pglDepthBoundsEXT(zmin, zmax);
			LogCommand("glDepthBoundsEXT", null, zmin, zmax			);
			DebugCheckErrors(null);
		}

		internal unsafe static partial class UnsafeNativeMethods
		{
			#if !NETCORE
			[SuppressUnmanagedCodeSecurity()]
			#endif
			[DllImport(Library, EntryPoint = "glDepthBoundsEXT", ExactSpelling = true)]
			internal extern static void glDepthBoundsEXT(double zmin, double zmax);

		}

		internal unsafe static partial class Delegates
		{
			[RequiredByFeature("GL_EXT_depth_bounds_test")]
			#if !NETCORE
			[SuppressUnmanagedCodeSecurity()]
			#endif
			internal delegate void glDepthBoundsEXT(double zmin, double zmax);

			[RequiredByFeature("GL_EXT_depth_bounds_test")]
			[ThreadStatic]
			internal static glDepthBoundsEXT pglDepthBoundsEXT;

		}
	}

}
